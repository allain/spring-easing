!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).SpringEasing={})}(this,(function(e){"use strict";const t=(e,t,n)=>Math.min(Math.max(e,t),n),n=(e,[n=1,s=100,r=10,i=0]=[],a)=>{n=t(n,.1,1e3),s=t(s,.1,1e3),r=t(r,.1,1e3),i=t(i,.1,1e3);const o=Math.sqrt(s/n),g=r/(2*Math.sqrt(s*n)),p=g<1?o*Math.sqrt(1-g*g):0,l=g<1?(g*o-i)/p:-i+o;let f=a?a*e/1e3:e;return f=g<1?Math.exp(-f*g*o)*(1*Math.cos(p*f)+l*Math.sin(p*f)):(1+l*f)*Math.exp(-f*o),0===e||1===e?e:1-f},s=new Map,r=1e5,i=([e,t,i,a]=[])=>{let o=[e,t,i,a],g=`${o}`;if(s.has(g))return s.get(g);const p=1/6;let l=0,f=0,u=0;for(;++u<r;)if(l+=p,1===n(l,o,null)){if(f++,f>=16)break}else f=0;const m=l*p*1e3;return s.set(g,m),m},a=e=>(t,n=[],s)=>1-e(1-t,n,s),o=e=>(t,n=[],s)=>t<.5?e(2*t,n,s)/2:1-e(-2*t+2,n,s)/2,g=e=>(t,n=[],s)=>t<.5?(1-e(1-2*t,n,s))/2:(e(2*t-1,n,s)+1)/2,p=n,l=a(n),f=o(n),u=g(n),m=(e,t,n)=>t+(n-t)*e,h=(e,t)=>Math.round(e*10**t)/10**t,c=(e,n,s=3)=>{let r=n.length-1,i=t(Math.floor(e*r),0,r-1),a=n[i],o=n[i+1];return h(m((e-i/r)*r,a,o),s)},d={spring:n,"spring-in":p,"spring-out":l,"spring-in-out":f,"spring-out-in":u},y=e=>{const t=/(\(|\s)([^)]+)\)?/.exec(e.toString());return t?t[2].split(",").map((e=>{let t=parseFloat(e);return Number.isNaN(t)?e.trim():t})):[]},M=(e={})=>{let t="string"==typeof e||Array.isArray(e)&&"function"==typeof e[0],{easing:s=[n,1,100,10,0],numPoints:r=100,decimal:i=3}=t?{easing:e}:e;if("string"==typeof s){let e=d[s.replace(/(\(|\s).+/,"").toLowerCase().trim()];s=[e,...y(s)]}return{easing:s,numPoints:r,decimal:i}},w=new Map,F=(e={})=>{let{easing:t,numPoints:n}=M(e);if(!Array.isArray(t))throw new Error(`[spring-easing] The easing needs to be in the format:  \n* "spring-out(mass, stiffness, damping, velocity)" or \n* [SpringOutFrame, mass, stiffness, damping, velocity], the easing recieved is "${t}", [spring-easing] doesn't really know what to do with that.`);if("function"!=typeof t[0])throw new Error("[spring-easing] A frame function is required as the first element in the easing array, e.g. [SpringFrame, ...]");t.length>1&&t.length<5&&console.warn(`[spring-easing] Be careful of only setting some of the spring parameters, you've only set ${5-t.length} spring parameter(s). The easing works best in the format: \n* "spring-out(mass, stiffness, damping, velocity)" or \n* [SpringOutFrame, mass, stiffness, damping, velocity].`),t.length>5&&console.warn(`[spring-easing] You entered ${5-t.length} more spring parameter(s) than necessary. The easing needs to be in the format: \n* "spring-out(mass, stiffness, damping, velocity)" or \n* [SpringOutFrame, mass, stiffness, damping, velocity].`);let[s,...r]=t;const a=`${r},${n}`;if(w.has(a)){let e=w.get(a);if(e.has(s))return e.get(s)}const o=[];let g=i(r);for(let e=0;e<n;e++)o[e]=s(e/(n-1),r,g);let p=w.has(a)?w.get(a):new WeakMap;return p.set(s,[o,g]),w.set(a,p),[o,g]},S=(e,t={})=>{let n=M(t),[s,r]=F(n);return[s.map((t=>c(t,e,n.decimal))),r]};e.EaseInOut=o,e.EaseOut=a,e.EaseOutIn=g,e.EasingDurationCache=s,e.EasingFunctions=d,e.EasingOptions=M,e.FramePtsCache=w,e.GenerateSpringFrames=F,e.INTINITE_LOOP_LIMIT=r,e.SpringEasing=S,e.SpringFrame=n,e.SpringInFrame=p,e.SpringInOutFrame=f,e.SpringOutFrame=l,e.SpringOutInFrame=u,e.default=S,e.getSpringDuration=i,e.interpolateNumber=c,e.limit=t,e.parseEasingParameters=y,e.scale=m,e.toFixed=h,Object.defineProperty(e,"__esModule",{value:!0})}));

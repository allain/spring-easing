(function(r,p){typeof exports=="object"&&typeof module<"u"?p(exports):typeof define=="function"&&define.amd?define(["exports"],p):(r=typeof globalThis<"u"?globalThis:r||self,p(r.SpringEasing={}))})(this,function(r){"use strict";function p(e){let n=parseFloat(e);return typeof n=="number"&&!Number.isNaN(n)}function l(e,n,t){return Math.min(Math.max(e,n),t)}function E(e,n,t){return n+(t-n)*e}function S(e,n){return Math.round(e*10**n)/10**n}function I(e){const n=parseFloat(e);return e.toString().replace(n.toString(),"")}const f=(e,[n=1,t=100,i=10,s=0]=[],a)=>{if(e===0||e===1)return e;n=l(n,.1,1e3),t=l(t,.1,1e3),i=l(i,.1,1e3),s=l(s,.1,1e3);const u=Math.sqrt(t/n),o=i/(2*Math.sqrt(t*n)),g=o<1?u*Math.sqrt(1-o*o):0,c=1,d=o<1?(o*u+-s)/g:-s+u;let m=a?a*e/1e3:e;return o<1?m=Math.exp(-m*o*u)*(c*Math.cos(g*m)+d*Math.sin(g*m)):m=(c+d*m)*Math.exp(-m*u),1-m},y=new Map,M=1e5;function N([e,n,t,i]=[]){let s=[e,n,t,i],a=`${s}`;if(y.has(a))return y.get(a);const u=1/6;let o=0,g=0,c=0;for(;++c<M;)if(o+=u,f(o,s,null)===1){if(g++,g>=16)break}else g=0;const d=o*u*1e3;return y.set(a,d),d}function w(e){return(n,t=[],i)=>1-e(1-n,t,i)}function k(e){return function(n,t=[],i){return n<.5?e(n*2,t,i)/2:1-e(n*-2+2,t,i)/2}}function j(e){return function(n,t=[],i){return n<.5?(1-e(1-n*2,t,i))/2:(e(n*2-1,t,i)+1)/2}}const T=f,L=w(f),P=k(f),C=j(f);function O(e,n,t=3){const i=n.length-1;return e.map(s=>{const a=l(Math.floor(s*i),0,i-1),u=n[a],o=n[a+1],g=(s-a/i)*i;return S(E(g,u,o),t)})}function _(e,n){const t=n.length-1;return e.map(i=>{i=l(i,0,1);const s=Math.round(i*t);return n[s]})}function $(e,n,t=3){let i="";return p(n[0])&&(i=I(n[0])),O(e,n.map(s=>typeof s=="number"?s:parseFloat(s)),t).map(s=>s+i)}function A(e,n,t=3){return n.every(a=>typeof a=="number")?O(e,n,t):n.every(a=>p(a))?$(e,n,t):_(e,n)}const h={spring:f,"spring-in":T,"spring-out":L,"spring-in-out":P,"spring-out-in":C};r.EasingFunctionKeys=Object.keys(h);function K(e,n){Object.assign(h,{[e]:n}),r.EasingFunctionKeys=Object.keys(h)}function G(...e){Object.assign(h,...e),r.EasingFunctionKeys=Object.keys(h)}function q(e){const n=/(\(|\s)([^)]+)\)?/.exec(e.toString());return n?n[2].split(",").map(t=>{let i=parseFloat(t);return Number.isNaN(i)?t.trim():i}):[]}function b(e={}){const n=typeof e=="string"||Array.isArray(e)&&typeof e[0]=="function";let{easing:t=[f,1,100,10,0],numPoints:i=100,decimal:s=3}=n?{easing:e}:e;if(typeof t=="string"){const a=h[t.replace(/(\(|\s).+/,"").toLowerCase().trim()],u=q(t);t=[a,...u]}return{easing:t,numPoints:i,decimal:s}}const F=new Map;function D(e={}){let{easing:n,numPoints:t}=b(e);if(Array.isArray(n)){if(typeof n[0]!="function")throw new Error("[spring-easing] A frame function is required as the first element in the easing array, e.g. [SpringFrame, ...]");n.length>1&&n.length<5&&console.warn(`[spring-easing] Be careful of only setting some of the spring parameters, you've only set ${5-n.length} spring parameter(s). The easing works best in the format: 
* "spring-out(mass, stiffness, damping, velocity)" or 
* [SpringOutFrame, mass, stiffness, damping, velocity].`),n.length>5&&console.warn(`[spring-easing] You entered ${5-n.length} more spring parameter(s) than necessary. The easing needs to be in the format: 
* "spring-out(mass, stiffness, damping, velocity)" or 
* [SpringOutFrame, mass, stiffness, damping, velocity].`)}else throw new Error(`[spring-easing] The easing needs to be in the format:  
* "spring-out(mass, stiffness, damping, velocity)" or 
* [SpringOutFrame, mass, stiffness, damping, velocity], the easing recieved is "${n}", [spring-easing] doesn't really know what to do with that.`);let[i,...s]=n;const a=`${s},${t}`;if(F.has(a)){let c=F.get(a);if(c.has(i))return c.get(i)}const u=[],o=N(s);for(let c=0;c<t;c++)u[c]=i(c/(t-1),s,o);const g=F.has(a)?F.get(a):new WeakMap;return g.set(i,[u,o]),F.set(a,g),[u,o]}function U(e,n={},t=A){const i=b(n),[s,a]=D(i);return[t(s,e,i.decimal),a]}r.EaseInOut=k,r.EaseOut=w,r.EaseOutIn=j,r.EasingDurationCache=y,r.EasingFunctions=h,r.EasingOptions=b,r.FramePtsCache=F,r.GenerateSpringFrames=D,r.INFINITE_LOOP_LIMIT=M,r.SpringEasing=U,r.SpringFrame=f,r.SpringInFrame=T,r.SpringInOutFrame=P,r.SpringOutFrame=L,r.SpringOutInFrame=C,r.default=U,r.getSpringDuration=N,r.getUnit=I,r.interpolateComplex=A,r.interpolateNumber=O,r.interpolateString=$,r.interpolateUsingIndex=_,r.isNumberLike=p,r.limit=l,r.parseEasingParameters=q,r.registerEasingFunction=K,r.registerEasingFunctions=G,r.scale=E,r.toFixed=S,Object.defineProperties(r,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
